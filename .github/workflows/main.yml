name: ecr push image

on:
  push:

env:
  # Dockerイメージのtarアーカイブ出力先のパス
  PATH_CACHE: /tmp/docker-img-arch
  # イメージを push する ECR リポジトリ名
  REPOSITORY: webspeedhackathon2023
  # 任意のイメージタグ
  IMAGE_TAG: 'latest'

jobs:
  push:
    runs-on: ubuntu-latest
    # `permissions` を設定しないと OIDC が使えないので注意
    permissions:
      id-token: write
      contents: read

    steps:
      # build-push-actionに必要なツールやセットアップ
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # リポジトリの読み取り
      - uses: actions/checkout@v3

      # キャッシュを有効化
      - name: Enable Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PATH_CACHE }}
          key: yokuwakaran-key
          restore-keys: yokuwakaran-restore-keys

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: 'us-east-1'
          role-to-assume: 'arn:aws:iam::230806776430:role/webspeedhackathon2023-push-ecr-from-github-actions-role'

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定

      # Dockerイメージをビルド
      - name: Build Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true # イメージを保存する
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=local,src=${{ env.PATH_CACHE }}
          cache-to: type=local,dest=${{ env.PATH_CACHE }}-new,mode=max

      # Docker イメージを pushする
      - name: Push docker image to ecr
        env:
          # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      # キャッシュが蓄積される問題を解消
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf ${{ env.PATH_CACHE}}
          mv ${{ env.PATH_CACHE }}-new ${{ env.PATH_CACHE }}
